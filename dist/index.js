/**
 * @license MIT https://github.com/omgaz/diffler
 * Author: Gary Chisholm @omgaz
 */
function isArray(r){return"object"==typeof r&&Boolean(r.length)}function isPrimitive(r){return r!==Object(r)}function validate(r){if(isPrimitive(r))return r;throw new Error("Cannot ignore array ordering on non-primitive values")}var defaultOptions={respectArrayOrder:!0};function diffler(r,t,e){void 0===e&&(e=defaultOptions);var o,n,i,a,f,l={};for(o in r){r.hasOwnProperty(o)&&"function"!=typeof r[o]&&(a=r[o],f=t[o],o in t?"object"==typeof a?(i=f,isArray(n=a)&&isArray(f)&&(a.map(validate),f.map(validate),e.respectArrayOrder||(n=a.sort(),i=f.sort())),i=diffler(n,i,e),0<Object.keys(i).length&&i&&(l[o]=i)):a!==f&&(l[o]={from:a,to:f}):l[o]={from:a,to:null})}for(o in t){t.hasOwnProperty(o)&&"function"!=typeof t[o]&&(a=r[o],f=t[o],o in r||((l=l||{})[o]={from:null,to:f}))}return l}module.exports=diffler;