/**
 * @license MIT https://github.com/omgaz/diffler
 * Author: Gary Chisholm @omgaz
 */
const isPlainObject=r=>r&&"object"==typeof r&&!Array.isArray(r),isValidProperty=(r,e)=>Object.prototype.hasOwnProperty.call(r,e)&&"function"!=typeof r[e],compareValues=(e,t)=>{if(typeof e!=typeof t)return{from:e,to:t};if(Array.isArray(e)&&Array.isArray(t)){var o={},l=Math.max(e.length,t.length);for(let r=0;r<l;r++){var n=compareValues(e[r],t[r]);n&&(o[r]=n)}return Object.keys(o).length?o:null}var r;return isPlainObject(e)&&isPlainObject(t)?(r=diffler(e,t),Object.keys(r).length?r:null):e!==t?{from:e,to:t}:null};function diffler(r,e){var t,o={};for(const l in r)isValidProperty(r,l)&&(l in e?(t=compareValues(r[l],e[l]))&&(o[l]=t):o[l]={from:r[l],to:null});for(const n in e)!isValidProperty(e,n)||n in r||(o[n]={from:null,to:e[n]});return o}module.exports=diffler;